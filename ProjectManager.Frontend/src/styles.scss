@use 'sass:map';
@use '/node_modules/@angular/material' as mat;
@import "/node_modules/@angular/material/theming";
@include mat.core();

$angular-primary: mat.define-palette(mat.$blue-palette, 500, 100, 900);
$angular-accent: mat.define-palette(mat.$green-palette, A200, A100, A400);
$angular-warn: mat.define-palette(mat.$red-palette);

$angular-default-theme: mat.define-light-theme(
    (
      color: (
        primary: $angular-primary,
        accent: $angular-accent,
        warn: $angular-warn,
      ),
    )
);

$angular-dark-theme: mat.define-dark-theme(
    (
      color: (
        primary: $angular-primary,
        accent: $angular-accent,
        warn: $angular-warn,
      ),
    )
);

.darkMode {
  @include mat.all-component-colors($angular-dark-theme);

  $color-config: mat.get-color-config($angular-dark-theme);
  $background: map.get($color-config, 'background');

  ::-webkit-scrollbar {
    width: 10px;
  }
  ::-webkit-scrollbar-track {
    background: map.get($background, 'app-bar');
    border-radius: 5px;
  }
  ::-webkit-scrollbar-thumb {
    background: map.get($background, 'hover');
    border-radius: 5px;
  }
  ::-webkit-scrollbar-thumb:hover {
    background: map.get($background, 'focused-button');
  }

  body {
    background-color: map.get($background, 'background');
  }

  .stopColor {
    $stopColor: map.get($color-config, 'warn');
    color: map.get($stopColor, 500);
  }

  .startColor {
    $startColor: map.get($color-config, 'accent');
    color: map.get($startColor, 500);
  }
}

@include mat.all-component-themes($angular-default-theme);

$color-config: mat.get-color-config($angular-default-theme);
$background: map.get($color-config, 'background');

::-webkit-scrollbar {
  width: 10px;
}
::-webkit-scrollbar-track {
  background: map.get($background, 'app-bar');
  border-radius: 5px;
}
::-webkit-scrollbar-thumb {
  background: map.get($background, 'hover');
  border-radius: 5px;
}
::-webkit-scrollbar-thumb:hover {
  background: map.get($background, 'focused-button');
}

.disabled {
  color: #999;
}

.stopColor {
  $stopColor: map.get($color-config, 'warn');
  color: map.get($stopColor, 500);
}

.startColor {
  $startColor: map.get($color-config, 'accent');
  color: map.get($startColor, 500);
}

html, body { height: 100%; }

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
  background-color: map.get($background, 'background');

  width: 100vw;
  height: 100vh;
  display: grid;
  place-items: center;
}

* {
  user-select: none;
}
